{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\elisk\\\\OneDrive\\\\Dokumenty\\\\IT_kurzy\\\\Codecademy\\\\projects\\\\appointment-planner-starting-v18\\\\src\\\\components\\\\contactPicker\\\\ContactPicker.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ContactPicker = props => {\n  if (props.name === false) {\n    contactOptions = /*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"No Contact Selected\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 22\n    }, this);\n    return contactOptions;\n  } else {\n    contactOptions = props.contacts.map(contact => {\n      /*#__PURE__*/_jsxDEV(\"option\", {\n        value: contact.name,\n        children: [\" \", contact.name, \" \"]\n      }, contact.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 7\n      }, this);\n    });\n    return contactOptions;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: props.onChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = ContactPicker;\nvar _c;\n$RefreshReg$(_c, \"ContactPicker\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","ContactPicker","props","name","contactOptions","value","children","fileName","_jsxFileName","lineNumber","columnNumber","contacts","map","contact","onChange","required","_c","$RefreshReg$"],"sources":["C:/Users/elisk/OneDrive/Dokumenty/IT_kurzy/Codecademy/projects/appointment-planner-starting-v18/src/components/contactPicker/ContactPicker.js"],"sourcesContent":["import React from \"react\";\r\n\r\nexport const ContactPicker = (props) => {\r\n  \r\n\r\n  if (props.name === false) {\r\n    contactOptions = <option value=\"\">No Contact Selected</option>;\r\n    return contactOptions;\r\n  } else {\r\n    contactOptions = props.contacts.map((contact) => {\r\n      <option value={contact.name} key={contact.name}>\r\n        {\" \"}\r\n        {contact.name}{\" \"}\r\n      </option>;\r\n    });\r\n    return contactOptions;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <select onChange={props.onChange} required>\r\n        \r\n      </select>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,OAAO,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAGtC,IAAIA,KAAK,CAACC,IAAI,KAAK,KAAK,EAAE;IACxBC,cAAc,gBAAGN,OAAA;MAAQO,KAAK,EAAC,EAAE;MAAAC,QAAA,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;IAC9D,OAAON,cAAc;EACvB,CAAC,MAAM;IACLA,cAAc,GAAGF,KAAK,CAACS,QAAQ,CAACC,GAAG,CAAEC,OAAO,IAAK;MAC/C,aAAAf,OAAA;QAAQO,KAAK,EAAEQ,OAAO,CAACV,IAAK;QAAAG,QAAA,GACzB,GAAG,EACHO,OAAO,CAACV,IAAI,EAAE,GAAG;MAAA,GAFcU,OAAO,CAACV,IAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAGrC;IACX,CAAC,CAAC;IACF,OAAON,cAAc;EACvB;EAEA,oBACEN,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACER,OAAA;MAAQgB,QAAQ,EAAEZ,KAAK,CAACY,QAAS;MAACC,QAAQ;IAAA;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAEjC,iBACR;AAEP,CAAC;AAACM,EAAA,GAvBWf,aAAa;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}